#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiBo.Domain.Common.Dao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiBoDB")]
	public partial class EntitiesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAcceptDetailIO(AcceptDetailIO instance);
    partial void UpdateAcceptDetailIO(AcceptDetailIO instance);
    partial void DeleteAcceptDetailIO(AcceptDetailIO instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAcceptDetail(AcceptDetail instance);
    partial void UpdateAcceptDetail(AcceptDetail instance);
    partial void DeleteAcceptDetail(AcceptDetail instance);
    partial void InsertAcceptIO(AcceptIO instance);
    partial void UpdateAcceptIO(AcceptIO instance);
    partial void DeleteAcceptIO(AcceptIO instance);
    partial void InsertAccept(Accept instance);
    partial void UpdateAccept(Accept instance);
    partial void DeleteAccept(Accept instance);
    partial void InsertAge(Age instance);
    partial void UpdateAge(Age instance);
    partial void DeleteAge(Age instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertFAQ(FAQ instance);
    partial void UpdateFAQ(FAQ instance);
    partial void DeleteFAQ(FAQ instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertGiftCard(GiftCard instance);
    partial void UpdateGiftCard(GiftCard instance);
    partial void DeleteGiftCard(GiftCard instance);
    partial void InsertGroupRole(GroupRole instance);
    partial void UpdateGroupRole(GroupRole instance);
    partial void DeleteGroupRole(GroupRole instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertHelp(Help instance);
    partial void UpdateHelp(Help instance);
    partial void DeleteHelp(Help instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertMCode(MCode instance);
    partial void UpdateMCode(MCode instance);
    partial void DeleteMCode(MCode instance);
    partial void InsertMNumber(MNumber instance);
    partial void UpdateMNumber(MNumber instance);
    partial void DeleteMNumber(MNumber instance);
    partial void InsertMParameter(MParameter instance);
    partial void UpdateMParameter(MParameter instance);
    partial void DeleteMParameter(MParameter instance);
    partial void InsertNewsletter(Newsletter instance);
    partial void UpdateNewsletter(Newsletter instance);
    partial void DeleteNewsletter(Newsletter instance);
    partial void InsertOfferItem(OfferItem instance);
    partial void UpdateOfferItem(OfferItem instance);
    partial void DeleteOfferItem(OfferItem instance);
    partial void InsertOffer(Offer instance);
    partial void UpdateOffer(Offer instance);
    partial void DeleteOffer(Offer instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertStorageFile(StorageFile instance);
    partial void UpdateStorageFile(StorageFile instance);
    partial void DeleteStorageFile(StorageFile instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    #endregion
		
		public EntitiesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MiBoDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AcceptDetailIO> AcceptDetailIOs
		{
			get
			{
				return this.GetTable<AcceptDetailIO>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<AcceptDetail> AcceptDetails
		{
			get
			{
				return this.GetTable<AcceptDetail>();
			}
		}
		
		public System.Data.Linq.Table<AcceptIO> AcceptIOs
		{
			get
			{
				return this.GetTable<AcceptIO>();
			}
		}
		
		public System.Data.Linq.Table<Accept> Accepts
		{
			get
			{
				return this.GetTable<Accept>();
			}
		}
		
		public System.Data.Linq.Table<Age> Ages
		{
			get
			{
				return this.GetTable<Age>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Deliveries
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<FAQ> FAQs
		{
			get
			{
				return this.GetTable<FAQ>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<GiftCard> GiftCards
		{
			get
			{
				return this.GetTable<GiftCard>();
			}
		}
		
		public System.Data.Linq.Table<GroupRole> GroupRoles
		{
			get
			{
				return this.GetTable<GroupRole>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Help> Helps
		{
			get
			{
				return this.GetTable<Help>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<MCode> MCodes
		{
			get
			{
				return this.GetTable<MCode>();
			}
		}
		
		public System.Data.Linq.Table<MNumber> MNumbers
		{
			get
			{
				return this.GetTable<MNumber>();
			}
		}
		
		public System.Data.Linq.Table<MParameter> MParameters
		{
			get
			{
				return this.GetTable<MParameter>();
			}
		}
		
		public System.Data.Linq.Table<Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<OfferItem> OfferItems
		{
			get
			{
				return this.GetTable<OfferItem>();
			}
		}
		
		public System.Data.Linq.Table<Offer> Offers
		{
			get
			{
				return this.GetTable<Offer>();
			}
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stocks
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<StorageFile> StorageFiles
		{
			get
			{
				return this.GetTable<StorageFile>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcceptDetailIOs")]
	public partial class AcceptDetailIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AcceptSlipNo;
		
		private decimal _SlipHistoryNo;
		
		private decimal _DetailNo;
		
		private string _ItemCd;
		
		private string _ItemName;
		
		private string _UnitCd;
		
		private System.Nullable<decimal> _DetailQtty;
		
		private System.Nullable<decimal> _DetailPrice;
		
		private System.Nullable<decimal> _DetailAmt;
		
		private System.Nullable<decimal> _Discount;
		
		private string _DetailNotes;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntityRef<AcceptIO> _AcceptIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcceptSlipNoChanging(string value);
    partial void OnAcceptSlipNoChanged();
    partial void OnSlipHistoryNoChanging(decimal value);
    partial void OnSlipHistoryNoChanged();
    partial void OnDetailNoChanging(decimal value);
    partial void OnDetailNoChanged();
    partial void OnItemCdChanging(string value);
    partial void OnItemCdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnUnitCdChanging(string value);
    partial void OnUnitCdChanged();
    partial void OnDetailQttyChanging(System.Nullable<decimal> value);
    partial void OnDetailQttyChanged();
    partial void OnDetailPriceChanging(System.Nullable<decimal> value);
    partial void OnDetailPriceChanged();
    partial void OnDetailAmtChanging(System.Nullable<decimal> value);
    partial void OnDetailAmtChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnDetailNotesChanging(string value);
    partial void OnDetailNotesChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public AcceptDetailIO()
		{
			this._AcceptIO = default(EntityRef<AcceptIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptSlipNo", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AcceptSlipNo
		{
			get
			{
				return this._AcceptSlipNo;
			}
			set
			{
				if ((this._AcceptSlipNo != value))
				{
					if (this._AcceptIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptSlipNoChanging(value);
					this.SendPropertyChanging();
					this._AcceptSlipNo = value;
					this.SendPropertyChanged("AcceptSlipNo");
					this.OnAcceptSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipHistoryNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal SlipHistoryNo
		{
			get
			{
				return this._SlipHistoryNo;
			}
			set
			{
				if ((this._SlipHistoryNo != value))
				{
					if (this._AcceptIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlipHistoryNoChanging(value);
					this.SendPropertyChanging();
					this._SlipHistoryNo = value;
					this.SendPropertyChanged("SlipHistoryNo");
					this.OnSlipHistoryNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal DetailNo
		{
			get
			{
				return this._DetailNo;
			}
			set
			{
				if ((this._DetailNo != value))
				{
					this.OnDetailNoChanging(value);
					this.SendPropertyChanging();
					this._DetailNo = value;
					this.SendPropertyChanged("DetailNo");
					this.OnDetailNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCd", DbType="VarChar(255)")]
		public string ItemCd
		{
			get
			{
				return this._ItemCd;
			}
			set
			{
				if ((this._ItemCd != value))
				{
					this.OnItemCdChanging(value);
					this.SendPropertyChanging();
					this._ItemCd = value;
					this.SendPropertyChanged("ItemCd");
					this.OnItemCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(255)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCd", DbType="VarChar(255)")]
		public string UnitCd
		{
			get
			{
				return this._UnitCd;
			}
			set
			{
				if ((this._UnitCd != value))
				{
					this.OnUnitCdChanging(value);
					this.SendPropertyChanging();
					this._UnitCd = value;
					this.SendPropertyChanged("UnitCd");
					this.OnUnitCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailQtty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DetailQtty
		{
			get
			{
				return this._DetailQtty;
			}
			set
			{
				if ((this._DetailQtty != value))
				{
					this.OnDetailQttyChanging(value);
					this.SendPropertyChanging();
					this._DetailQtty = value;
					this.SendPropertyChanged("DetailQtty");
					this.OnDetailQttyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DetailPrice
		{
			get
			{
				return this._DetailPrice;
			}
			set
			{
				if ((this._DetailPrice != value))
				{
					this.OnDetailPriceChanging(value);
					this.SendPropertyChanging();
					this._DetailPrice = value;
					this.SendPropertyChanged("DetailPrice");
					this.OnDetailPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailAmt", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DetailAmt
		{
			get
			{
				return this._DetailAmt;
			}
			set
			{
				if ((this._DetailAmt != value))
				{
					this.OnDetailAmtChanging(value);
					this.SendPropertyChanging();
					this._DetailAmt = value;
					this.SendPropertyChanged("DetailAmt");
					this.OnDetailAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNotes", DbType="NVarChar(255)")]
		public string DetailNotes
		{
			get
			{
				return this._DetailNotes;
			}
			set
			{
				if ((this._DetailNotes != value))
				{
					this.OnDetailNotesChanging(value);
					this.SendPropertyChanging();
					this._DetailNotes = value;
					this.SendPropertyChanged("DetailNotes");
					this.OnDetailNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcceptIO_AcceptDetailIO", Storage="_AcceptIO", ThisKey="AcceptSlipNo,SlipHistoryNo", OtherKey="AcceptSlipNo,SlipHistoryNo", IsForeignKey=true)]
		public AcceptIO AcceptIO
		{
			get
			{
				return this._AcceptIO.Entity;
			}
			set
			{
				AcceptIO previousValue = this._AcceptIO.Entity;
				if (((previousValue != value) 
							|| (this._AcceptIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AcceptIO.Entity = null;
						previousValue.AcceptDetailIOs.Remove(this);
					}
					this._AcceptIO.Entity = value;
					if ((value != null))
					{
						value.AcceptDetailIOs.Add(this);
						this._AcceptSlipNo = value.AcceptSlipNo;
						this._SlipHistoryNo = value.SlipHistoryNo;
					}
					else
					{
						this._AcceptSlipNo = default(string);
						this._SlipHistoryNo = default(decimal);
					}
					this.SendPropertyChanged("AcceptIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserCd;
		
		private string _Email;
		
		private string _Password;
		
		private string _FullName;
		
		private string _Address;
		
		private string _CityCd;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private System.Nullable<bool> _HasNewsletter;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<UserGroup> _UserGroups;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCdChanging(System.Guid value);
    partial void OnUserCdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityCdChanging(string value);
    partial void OnCityCdChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnHasNewsletterChanging(System.Nullable<bool> value);
    partial void OnHasNewsletterChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public User()
		{
			this._UserGroups = new EntitySet<UserGroup>(new Action<UserGroup>(this.attach_UserGroups), new Action<UserGroup>(this.detach_UserGroups));
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCd", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserCd
		{
			get
			{
				return this._UserCd;
			}
			set
			{
				if ((this._UserCd != value))
				{
					this.OnUserCdChanging(value);
					this.SendPropertyChanging();
					this._UserCd = value;
					this.SendPropertyChanged("UserCd");
					this.OnUserCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCd", DbType="VarChar(255)")]
		public string CityCd
		{
			get
			{
				return this._CityCd;
			}
			set
			{
				if ((this._CityCd != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityCdChanging(value);
					this.SendPropertyChanging();
					this._CityCd = value;
					this.SendPropertyChanged("CityCd");
					this.OnCityCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(255)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(255)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNewsletter", DbType="Bit")]
		public System.Nullable<bool> HasNewsletter
		{
			get
			{
				return this._HasNewsletter;
			}
			set
			{
				if ((this._HasNewsletter != value))
				{
					this.OnHasNewsletterChanging(value);
					this.SendPropertyChanging();
					this._HasNewsletter = value;
					this.SendPropertyChanged("HasNewsletter");
					this.OnHasNewsletterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGroup", Storage="_UserGroups", ThisKey="UserCd", OtherKey="UserCd")]
		public EntitySet<UserGroup> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_User", Storage="_City", ThisKey="CityCd", OtherKey="CityCd", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._CityCd = value.CityCd;
					}
					else
					{
						this._CityCd = default(string);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcceptDetails")]
	public partial class AcceptDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AcceptSlipNo;
		
		private decimal _DetailNo;
		
		private string _ItemCd;
		
		private string _ItemName;
		
		private string _UnitCd;
		
		private System.Nullable<decimal> _DetailQtty;
		
		private System.Nullable<decimal> _DetailPrice;
		
		private System.Nullable<decimal> _DetailAmt;
		
		private System.Nullable<decimal> _Discount;
		
		private string _DetailNotes;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntityRef<Accept> _Accept;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcceptSlipNoChanging(string value);
    partial void OnAcceptSlipNoChanged();
    partial void OnDetailNoChanging(decimal value);
    partial void OnDetailNoChanged();
    partial void OnItemCdChanging(string value);
    partial void OnItemCdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnUnitCdChanging(string value);
    partial void OnUnitCdChanged();
    partial void OnDetailQttyChanging(System.Nullable<decimal> value);
    partial void OnDetailQttyChanged();
    partial void OnDetailPriceChanging(System.Nullable<decimal> value);
    partial void OnDetailPriceChanged();
    partial void OnDetailAmtChanging(System.Nullable<decimal> value);
    partial void OnDetailAmtChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnDetailNotesChanging(string value);
    partial void OnDetailNotesChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public AcceptDetail()
		{
			this._Accept = default(EntityRef<Accept>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptSlipNo", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AcceptSlipNo
		{
			get
			{
				return this._AcceptSlipNo;
			}
			set
			{
				if ((this._AcceptSlipNo != value))
				{
					if (this._Accept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptSlipNoChanging(value);
					this.SendPropertyChanging();
					this._AcceptSlipNo = value;
					this.SendPropertyChanged("AcceptSlipNo");
					this.OnAcceptSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal DetailNo
		{
			get
			{
				return this._DetailNo;
			}
			set
			{
				if ((this._DetailNo != value))
				{
					this.OnDetailNoChanging(value);
					this.SendPropertyChanging();
					this._DetailNo = value;
					this.SendPropertyChanged("DetailNo");
					this.OnDetailNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCd", DbType="VarChar(255)")]
		public string ItemCd
		{
			get
			{
				return this._ItemCd;
			}
			set
			{
				if ((this._ItemCd != value))
				{
					this.OnItemCdChanging(value);
					this.SendPropertyChanging();
					this._ItemCd = value;
					this.SendPropertyChanged("ItemCd");
					this.OnItemCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(255)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCd", DbType="VarChar(255)")]
		public string UnitCd
		{
			get
			{
				return this._UnitCd;
			}
			set
			{
				if ((this._UnitCd != value))
				{
					this.OnUnitCdChanging(value);
					this.SendPropertyChanging();
					this._UnitCd = value;
					this.SendPropertyChanged("UnitCd");
					this.OnUnitCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailQtty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DetailQtty
		{
			get
			{
				return this._DetailQtty;
			}
			set
			{
				if ((this._DetailQtty != value))
				{
					this.OnDetailQttyChanging(value);
					this.SendPropertyChanging();
					this._DetailQtty = value;
					this.SendPropertyChanged("DetailQtty");
					this.OnDetailQttyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DetailPrice
		{
			get
			{
				return this._DetailPrice;
			}
			set
			{
				if ((this._DetailPrice != value))
				{
					this.OnDetailPriceChanging(value);
					this.SendPropertyChanging();
					this._DetailPrice = value;
					this.SendPropertyChanged("DetailPrice");
					this.OnDetailPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailAmt", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DetailAmt
		{
			get
			{
				return this._DetailAmt;
			}
			set
			{
				if ((this._DetailAmt != value))
				{
					this.OnDetailAmtChanging(value);
					this.SendPropertyChanging();
					this._DetailAmt = value;
					this.SendPropertyChanged("DetailAmt");
					this.OnDetailAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNotes", DbType="NVarChar(255)")]
		public string DetailNotes
		{
			get
			{
				return this._DetailNotes;
			}
			set
			{
				if ((this._DetailNotes != value))
				{
					this.OnDetailNotesChanging(value);
					this.SendPropertyChanging();
					this._DetailNotes = value;
					this.SendPropertyChanged("DetailNotes");
					this.OnDetailNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accept_AcceptDetail", Storage="_Accept", ThisKey="AcceptSlipNo", OtherKey="AcceptSlipNo", IsForeignKey=true)]
		public Accept Accept
		{
			get
			{
				return this._Accept.Entity;
			}
			set
			{
				Accept previousValue = this._Accept.Entity;
				if (((previousValue != value) 
							|| (this._Accept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accept.Entity = null;
						previousValue.AcceptDetails.Remove(this);
					}
					this._Accept.Entity = value;
					if ((value != null))
					{
						value.AcceptDetails.Add(this);
						this._AcceptSlipNo = value.AcceptSlipNo;
					}
					else
					{
						this._AcceptSlipNo = default(string);
					}
					this.SendPropertyChanged("Accept");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcceptIOs")]
	public partial class AcceptIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AcceptSlipNo;
		
		private decimal _SlipHistoryNo;
		
		private string _correctionDiv;
		
		private string _SlipStatus;
		
		private System.Nullable<System.DateTime> _AcceptDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _WishDeliveryDate;
		
		private string _ClientCd;
		
		private string _ClientName;
		
		private string _ClientAddress;
		
		private string _ClientTel;
		
		private string _DeliveryCd;
		
		private string _DeliveryName;
		
		private string _DeliveryAddress;
		
		private string _DeliveryTel;
		
		private string _PaymentMethods;
		
		private string _ViewId;
		
		private string _Notes;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<AcceptDetailIO> _AcceptDetailIOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcceptSlipNoChanging(string value);
    partial void OnAcceptSlipNoChanged();
    partial void OnSlipHistoryNoChanging(decimal value);
    partial void OnSlipHistoryNoChanged();
    partial void OncorrectionDivChanging(string value);
    partial void OncorrectionDivChanged();
    partial void OnSlipStatusChanging(string value);
    partial void OnSlipStatusChanged();
    partial void OnAcceptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnWishDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWishDeliveryDateChanged();
    partial void OnClientCdChanging(string value);
    partial void OnClientCdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnClientAddressChanging(string value);
    partial void OnClientAddressChanged();
    partial void OnClientTelChanging(string value);
    partial void OnClientTelChanged();
    partial void OnDeliveryCdChanging(string value);
    partial void OnDeliveryCdChanged();
    partial void OnDeliveryNameChanging(string value);
    partial void OnDeliveryNameChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnDeliveryTelChanging(string value);
    partial void OnDeliveryTelChanged();
    partial void OnPaymentMethodsChanging(string value);
    partial void OnPaymentMethodsChanged();
    partial void OnViewIdChanging(string value);
    partial void OnViewIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public AcceptIO()
		{
			this._AcceptDetailIOs = new EntitySet<AcceptDetailIO>(new Action<AcceptDetailIO>(this.attach_AcceptDetailIOs), new Action<AcceptDetailIO>(this.detach_AcceptDetailIOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptSlipNo", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AcceptSlipNo
		{
			get
			{
				return this._AcceptSlipNo;
			}
			set
			{
				if ((this._AcceptSlipNo != value))
				{
					this.OnAcceptSlipNoChanging(value);
					this.SendPropertyChanging();
					this._AcceptSlipNo = value;
					this.SendPropertyChanged("AcceptSlipNo");
					this.OnAcceptSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipHistoryNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal SlipHistoryNo
		{
			get
			{
				return this._SlipHistoryNo;
			}
			set
			{
				if ((this._SlipHistoryNo != value))
				{
					this.OnSlipHistoryNoChanging(value);
					this.SendPropertyChanging();
					this._SlipHistoryNo = value;
					this.SendPropertyChanged("SlipHistoryNo");
					this.OnSlipHistoryNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correctionDiv", DbType="VarChar(255)")]
		public string correctionDiv
		{
			get
			{
				return this._correctionDiv;
			}
			set
			{
				if ((this._correctionDiv != value))
				{
					this.OncorrectionDivChanging(value);
					this.SendPropertyChanging();
					this._correctionDiv = value;
					this.SendPropertyChanged("correctionDiv");
					this.OncorrectionDivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipStatus", DbType="VarChar(255)")]
		public string SlipStatus
		{
			get
			{
				return this._SlipStatus;
			}
			set
			{
				if ((this._SlipStatus != value))
				{
					this.OnSlipStatusChanging(value);
					this.SendPropertyChanging();
					this._SlipStatus = value;
					this.SendPropertyChanged("SlipStatus");
					this.OnSlipStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WishDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WishDeliveryDate
		{
			get
			{
				return this._WishDeliveryDate;
			}
			set
			{
				if ((this._WishDeliveryDate != value))
				{
					this.OnWishDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._WishDeliveryDate = value;
					this.SendPropertyChanged("WishDeliveryDate");
					this.OnWishDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCd", DbType="VarChar(255)")]
		public string ClientCd
		{
			get
			{
				return this._ClientCd;
			}
			set
			{
				if ((this._ClientCd != value))
				{
					this.OnClientCdChanging(value);
					this.SendPropertyChanging();
					this._ClientCd = value;
					this.SendPropertyChanged("ClientCd");
					this.OnClientCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(255)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddress", DbType="NVarChar(255)")]
		public string ClientAddress
		{
			get
			{
				return this._ClientAddress;
			}
			set
			{
				if ((this._ClientAddress != value))
				{
					this.OnClientAddressChanging(value);
					this.SendPropertyChanging();
					this._ClientAddress = value;
					this.SendPropertyChanged("ClientAddress");
					this.OnClientAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTel", DbType="VarChar(255)")]
		public string ClientTel
		{
			get
			{
				return this._ClientTel;
			}
			set
			{
				if ((this._ClientTel != value))
				{
					this.OnClientTelChanging(value);
					this.SendPropertyChanging();
					this._ClientTel = value;
					this.SendPropertyChanged("ClientTel");
					this.OnClientTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCd", DbType="VarChar(255)")]
		public string DeliveryCd
		{
			get
			{
				return this._DeliveryCd;
			}
			set
			{
				if ((this._DeliveryCd != value))
				{
					this.OnDeliveryCdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCd = value;
					this.SendPropertyChanged("DeliveryCd");
					this.OnDeliveryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryName", DbType="NVarChar(255)")]
		public string DeliveryName
		{
			get
			{
				return this._DeliveryName;
			}
			set
			{
				if ((this._DeliveryName != value))
				{
					this.OnDeliveryNameChanging(value);
					this.SendPropertyChanging();
					this._DeliveryName = value;
					this.SendPropertyChanged("DeliveryName");
					this.OnDeliveryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="NVarChar(255)")]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTel", DbType="VarChar(255)")]
		public string DeliveryTel
		{
			get
			{
				return this._DeliveryTel;
			}
			set
			{
				if ((this._DeliveryTel != value))
				{
					this.OnDeliveryTelChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTel = value;
					this.SendPropertyChanged("DeliveryTel");
					this.OnDeliveryTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethods", DbType="VarChar(255)")]
		public string PaymentMethods
		{
			get
			{
				return this._PaymentMethods;
			}
			set
			{
				if ((this._PaymentMethods != value))
				{
					this.OnPaymentMethodsChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethods = value;
					this.SendPropertyChanged("PaymentMethods");
					this.OnPaymentMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewId", DbType="VarChar(255)")]
		public string ViewId
		{
			get
			{
				return this._ViewId;
			}
			set
			{
				if ((this._ViewId != value))
				{
					this.OnViewIdChanging(value);
					this.SendPropertyChanging();
					this._ViewId = value;
					this.SendPropertyChanged("ViewId");
					this.OnViewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AcceptIO_AcceptDetailIO", Storage="_AcceptDetailIOs", ThisKey="AcceptSlipNo,SlipHistoryNo", OtherKey="AcceptSlipNo,SlipHistoryNo")]
		public EntitySet<AcceptDetailIO> AcceptDetailIOs
		{
			get
			{
				return this._AcceptDetailIOs;
			}
			set
			{
				this._AcceptDetailIOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AcceptDetailIOs(AcceptDetailIO entity)
		{
			this.SendPropertyChanging();
			entity.AcceptIO = this;
		}
		
		private void detach_AcceptDetailIOs(AcceptDetailIO entity)
		{
			this.SendPropertyChanging();
			entity.AcceptIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accepts")]
	public partial class Accept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AcceptSlipNo;
		
		private string _SlipStatus;
		
		private System.Nullable<System.DateTime> _AcceptDate;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<System.DateTime> _WishDeliveryDate;
		
		private string _ClientCd;
		
		private string _ClientName;
		
		private string _ClientAddress;
		
		private string _ClientTel;
		
		private string _DeliveryCd;
		
		private string _DeliveryName;
		
		private string _DeliveryAddress;
		
		private string _DeliveryTel;
		
		private string _PaymentMethods;
		
		private string _ViewId;
		
		private string _GiftCd;
		
		private string _UseGiftCd;
		
		private string _Notes;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<AcceptDetail> _AcceptDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcceptSlipNoChanging(string value);
    partial void OnAcceptSlipNoChanged();
    partial void OnSlipStatusChanging(string value);
    partial void OnSlipStatusChanged();
    partial void OnAcceptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnWishDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWishDeliveryDateChanged();
    partial void OnClientCdChanging(string value);
    partial void OnClientCdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnClientAddressChanging(string value);
    partial void OnClientAddressChanged();
    partial void OnClientTelChanging(string value);
    partial void OnClientTelChanged();
    partial void OnDeliveryCdChanging(string value);
    partial void OnDeliveryCdChanged();
    partial void OnDeliveryNameChanging(string value);
    partial void OnDeliveryNameChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnDeliveryTelChanging(string value);
    partial void OnDeliveryTelChanged();
    partial void OnPaymentMethodsChanging(string value);
    partial void OnPaymentMethodsChanged();
    partial void OnViewIdChanging(string value);
    partial void OnViewIdChanged();
    partial void OnGiftCdChanging(string value);
    partial void OnGiftCdChanged();
    partial void OnUseGiftCdChanging(string value);
    partial void OnUseGiftCdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Accept()
		{
			this._AcceptDetails = new EntitySet<AcceptDetail>(new Action<AcceptDetail>(this.attach_AcceptDetails), new Action<AcceptDetail>(this.detach_AcceptDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptSlipNo", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AcceptSlipNo
		{
			get
			{
				return this._AcceptSlipNo;
			}
			set
			{
				if ((this._AcceptSlipNo != value))
				{
					this.OnAcceptSlipNoChanging(value);
					this.SendPropertyChanging();
					this._AcceptSlipNo = value;
					this.SendPropertyChanged("AcceptSlipNo");
					this.OnAcceptSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipStatus", DbType="VarChar(255)")]
		public string SlipStatus
		{
			get
			{
				return this._SlipStatus;
			}
			set
			{
				if ((this._SlipStatus != value))
				{
					this.OnSlipStatusChanging(value);
					this.SendPropertyChanging();
					this._SlipStatus = value;
					this.SendPropertyChanged("SlipStatus");
					this.OnSlipStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WishDeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WishDeliveryDate
		{
			get
			{
				return this._WishDeliveryDate;
			}
			set
			{
				if ((this._WishDeliveryDate != value))
				{
					this.OnWishDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._WishDeliveryDate = value;
					this.SendPropertyChanged("WishDeliveryDate");
					this.OnWishDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCd", DbType="VarChar(255)")]
		public string ClientCd
		{
			get
			{
				return this._ClientCd;
			}
			set
			{
				if ((this._ClientCd != value))
				{
					this.OnClientCdChanging(value);
					this.SendPropertyChanging();
					this._ClientCd = value;
					this.SendPropertyChanged("ClientCd");
					this.OnClientCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(255)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddress", DbType="NVarChar(255)")]
		public string ClientAddress
		{
			get
			{
				return this._ClientAddress;
			}
			set
			{
				if ((this._ClientAddress != value))
				{
					this.OnClientAddressChanging(value);
					this.SendPropertyChanging();
					this._ClientAddress = value;
					this.SendPropertyChanged("ClientAddress");
					this.OnClientAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTel", DbType="VarChar(255)")]
		public string ClientTel
		{
			get
			{
				return this._ClientTel;
			}
			set
			{
				if ((this._ClientTel != value))
				{
					this.OnClientTelChanging(value);
					this.SendPropertyChanging();
					this._ClientTel = value;
					this.SendPropertyChanged("ClientTel");
					this.OnClientTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCd", DbType="VarChar(255)")]
		public string DeliveryCd
		{
			get
			{
				return this._DeliveryCd;
			}
			set
			{
				if ((this._DeliveryCd != value))
				{
					this.OnDeliveryCdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCd = value;
					this.SendPropertyChanged("DeliveryCd");
					this.OnDeliveryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryName", DbType="NVarChar(255)")]
		public string DeliveryName
		{
			get
			{
				return this._DeliveryName;
			}
			set
			{
				if ((this._DeliveryName != value))
				{
					this.OnDeliveryNameChanging(value);
					this.SendPropertyChanging();
					this._DeliveryName = value;
					this.SendPropertyChanged("DeliveryName");
					this.OnDeliveryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="NVarChar(255)")]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTel", DbType="VarChar(255)")]
		public string DeliveryTel
		{
			get
			{
				return this._DeliveryTel;
			}
			set
			{
				if ((this._DeliveryTel != value))
				{
					this.OnDeliveryTelChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTel = value;
					this.SendPropertyChanged("DeliveryTel");
					this.OnDeliveryTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethods", DbType="VarChar(255)")]
		public string PaymentMethods
		{
			get
			{
				return this._PaymentMethods;
			}
			set
			{
				if ((this._PaymentMethods != value))
				{
					this.OnPaymentMethodsChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethods = value;
					this.SendPropertyChanged("PaymentMethods");
					this.OnPaymentMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewId", DbType="VarChar(255)")]
		public string ViewId
		{
			get
			{
				return this._ViewId;
			}
			set
			{
				if ((this._ViewId != value))
				{
					this.OnViewIdChanging(value);
					this.SendPropertyChanging();
					this._ViewId = value;
					this.SendPropertyChanged("ViewId");
					this.OnViewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCd", DbType="VarChar(255)")]
		public string GiftCd
		{
			get
			{
				return this._GiftCd;
			}
			set
			{
				if ((this._GiftCd != value))
				{
					this.OnGiftCdChanging(value);
					this.SendPropertyChanging();
					this._GiftCd = value;
					this.SendPropertyChanged("GiftCd");
					this.OnGiftCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseGiftCd", DbType="VarChar(255)")]
		public string UseGiftCd
		{
			get
			{
				return this._UseGiftCd;
			}
			set
			{
				if ((this._UseGiftCd != value))
				{
					this.OnUseGiftCdChanging(value);
					this.SendPropertyChanging();
					this._UseGiftCd = value;
					this.SendPropertyChanged("UseGiftCd");
					this.OnUseGiftCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accept_AcceptDetail", Storage="_AcceptDetails", ThisKey="AcceptSlipNo", OtherKey="AcceptSlipNo")]
		public EntitySet<AcceptDetail> AcceptDetails
		{
			get
			{
				return this._AcceptDetails;
			}
			set
			{
				this._AcceptDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AcceptDetails(AcceptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Accept = this;
		}
		
		private void detach_AcceptDetails(AcceptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Accept = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ages")]
	public partial class Age : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AgeCd;
		
		private string _AgeName;
		
		private string _AgeSearchName;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgeCdChanging(string value);
    partial void OnAgeCdChanged();
    partial void OnAgeNameChanging(string value);
    partial void OnAgeNameChanged();
    partial void OnAgeSearchNameChanging(string value);
    partial void OnAgeSearchNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Age()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AgeCd
		{
			get
			{
				return this._AgeCd;
			}
			set
			{
				if ((this._AgeCd != value))
				{
					this.OnAgeCdChanging(value);
					this.SendPropertyChanging();
					this._AgeCd = value;
					this.SendPropertyChanged("AgeCd");
					this.OnAgeCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeName", DbType="NVarChar(255)")]
		public string AgeName
		{
			get
			{
				return this._AgeName;
			}
			set
			{
				if ((this._AgeName != value))
				{
					this.OnAgeNameChanging(value);
					this.SendPropertyChanging();
					this._AgeName = value;
					this.SendPropertyChanged("AgeName");
					this.OnAgeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeSearchName", DbType="VarChar(255)")]
		public string AgeSearchName
		{
			get
			{
				return this._AgeSearchName;
			}
			set
			{
				if ((this._AgeSearchName != value))
				{
					this.OnAgeSearchNameChanging(value);
					this.SendPropertyChanging();
					this._AgeSearchName = value;
					this.SendPropertyChanged("AgeSearchName");
					this.OnAgeSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Age_Item", Storage="_Items", ThisKey="AgeCd", OtherKey="AgeCd")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Age = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Age = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BannerCd;
		
		private string _BannerName;
		
		private string _BannerSearchName;
		
		private string _FileId;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerCdChanging(string value);
    partial void OnBannerCdChanged();
    partial void OnBannerNameChanging(string value);
    partial void OnBannerNameChanged();
    partial void OnBannerSearchNameChanging(string value);
    partial void OnBannerSearchNameChanged();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BannerCd
		{
			get
			{
				return this._BannerCd;
			}
			set
			{
				if ((this._BannerCd != value))
				{
					this.OnBannerCdChanging(value);
					this.SendPropertyChanging();
					this._BannerCd = value;
					this.SendPropertyChanged("BannerCd");
					this.OnBannerCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerName", DbType="VarChar(255)")]
		public string BannerName
		{
			get
			{
				return this._BannerName;
			}
			set
			{
				if ((this._BannerName != value))
				{
					this.OnBannerNameChanging(value);
					this.SendPropertyChanging();
					this._BannerName = value;
					this.SendPropertyChanged("BannerName");
					this.OnBannerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerSearchName", DbType="VarChar(255)")]
		public string BannerSearchName
		{
			get
			{
				return this._BannerSearchName;
			}
			set
			{
				if ((this._BannerSearchName != value))
				{
					this.OnBannerSearchNameChanging(value);
					this.SendPropertyChanging();
					this._BannerSearchName = value;
					this.SendPropertyChanged("BannerSearchName");
					this.OnBannerSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="VarChar(255)")]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brands")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrandCd;
		
		private string _BrandName;
		
		private string _BrandSearchName;
		
		private string _FileId;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandCdChanging(string value);
    partial void OnBrandCdChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnBrandSearchNameChanging(string value);
    partial void OnBrandSearchNameChanged();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Brand()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrandCd
		{
			get
			{
				return this._BrandCd;
			}
			set
			{
				if ((this._BrandCd != value))
				{
					this.OnBrandCdChanging(value);
					this.SendPropertyChanging();
					this._BrandCd = value;
					this.SendPropertyChanged("BrandCd");
					this.OnBrandCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="NVarChar(255)")]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandSearchName", DbType="VarChar(255)")]
		public string BrandSearchName
		{
			get
			{
				return this._BrandSearchName;
			}
			set
			{
				if ((this._BrandSearchName != value))
				{
					this.OnBrandSearchNameChanging(value);
					this.SendPropertyChanging();
					this._BrandSearchName = value;
					this.SendPropertyChanged("BrandSearchName");
					this.OnBrandSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="VarChar(255)")]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Item", Storage="_Items", ThisKey="BrandCd", OtherKey="BrandCd")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CategoryCd;
		
		private string _CategoryName;
		
		private string _CategorySearchName;
		
		private string _CategoryDiv;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryCdChanging(string value);
    partial void OnCategoryCdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategorySearchNameChanging(string value);
    partial void OnCategorySearchNameChanged();
    partial void OnCategoryDivChanging(string value);
    partial void OnCategoryDivChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Category()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CategoryCd
		{
			get
			{
				return this._CategoryCd;
			}
			set
			{
				if ((this._CategoryCd != value))
				{
					this.OnCategoryCdChanging(value);
					this.SendPropertyChanging();
					this._CategoryCd = value;
					this.SendPropertyChanged("CategoryCd");
					this.OnCategoryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(255)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategorySearchName", DbType="VarChar(255)")]
		public string CategorySearchName
		{
			get
			{
				return this._CategorySearchName;
			}
			set
			{
				if ((this._CategorySearchName != value))
				{
					this.OnCategorySearchNameChanging(value);
					this.SendPropertyChanging();
					this._CategorySearchName = value;
					this.SendPropertyChanged("CategorySearchName");
					this.OnCategorySearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDiv", DbType="VarChar(255)")]
		public string CategoryDiv
		{
			get
			{
				return this._CategoryDiv;
			}
			set
			{
				if ((this._CategoryDiv != value))
				{
					this.OnCategoryDivChanging(value);
					this.SendPropertyChanging();
					this._CategoryDiv = value;
					this.SendPropertyChanged("CategoryDiv");
					this.OnCategoryDivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Item", Storage="_Items", ThisKey="CategoryCd", OtherKey="CategoryCd")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CityCd;
		
		private string _CityName;
		
		private string _CitySeachName;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<User> _Users;
		
		private EntitySet<District> _Districts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityCdChanging(string value);
    partial void OnCityCdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnCitySeachNameChanging(string value);
    partial void OnCitySeachNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public City()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CityCd
		{
			get
			{
				return this._CityCd;
			}
			set
			{
				if ((this._CityCd != value))
				{
					this.OnCityCdChanging(value);
					this.SendPropertyChanging();
					this._CityCd = value;
					this.SendPropertyChanged("CityCd");
					this.OnCityCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(255)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitySeachName", DbType="VarChar(255)")]
		public string CitySeachName
		{
			get
			{
				return this._CitySeachName;
			}
			set
			{
				if ((this._CitySeachName != value))
				{
					this.OnCitySeachNameChanging(value);
					this.SendPropertyChanging();
					this._CitySeachName = value;
					this.SendPropertyChanged("CitySeachName");
					this.OnCitySeachNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_User", Storage="_Users", ThisKey="CityCd", OtherKey="CityCd")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_District", Storage="_Districts", ThisKey="CityCd", OtherKey="CityCd")]
		public EntitySet<District> Districts
		{
			get
			{
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryCd;
		
		private string _CountryName;
		
		private string _CountrySearchName;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryCdChanging(string value);
    partial void OnCountryCdChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCountrySearchNameChanging(string value);
    partial void OnCountrySearchNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Country()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryCd
		{
			get
			{
				return this._CountryCd;
			}
			set
			{
				if ((this._CountryCd != value))
				{
					this.OnCountryCdChanging(value);
					this.SendPropertyChanging();
					this._CountryCd = value;
					this.SendPropertyChanged("CountryCd");
					this.OnCountryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(255)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountrySearchName", DbType="VarChar(255)")]
		public string CountrySearchName
		{
			get
			{
				return this._CountrySearchName;
			}
			set
			{
				if ((this._CountrySearchName != value))
				{
					this.OnCountrySearchNameChanging(value);
					this.SendPropertyChanging();
					this._CountrySearchName = value;
					this.SendPropertyChanged("CountrySearchName");
					this.OnCountrySearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Item", Storage="_Items", ThisKey="CountryCd", OtherKey="CountryCd")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deliveries")]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerCd;
		
		private string _DeliveryCd;
		
		private string _DeliveryName;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCdChanging(string value);
    partial void OnCustomerCdChanged();
    partial void OnDeliveryCdChanging(string value);
    partial void OnDeliveryCdChanged();
    partial void OnDeliveryNameChanging(string value);
    partial void OnDeliveryNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Delivery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerCd
		{
			get
			{
				return this._CustomerCd;
			}
			set
			{
				if ((this._CustomerCd != value))
				{
					this.OnCustomerCdChanging(value);
					this.SendPropertyChanging();
					this._CustomerCd = value;
					this.SendPropertyChanged("CustomerCd");
					this.OnCustomerCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DeliveryCd
		{
			get
			{
				return this._DeliveryCd;
			}
			set
			{
				if ((this._DeliveryCd != value))
				{
					this.OnDeliveryCdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCd = value;
					this.SendPropertyChanged("DeliveryCd");
					this.OnDeliveryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryName", DbType="VarChar(255)")]
		public string DeliveryName
		{
			get
			{
				return this._DeliveryName;
			}
			set
			{
				if ((this._DeliveryName != value))
				{
					this.OnDeliveryNameChanging(value);
					this.SendPropertyChanging();
					this._DeliveryName = value;
					this.SendPropertyChanged("DeliveryName");
					this.OnDeliveryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Districts")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DistrictCd;
		
		private string _DistrictName;
		
		private string _DistrictSearchName;
		
		private string _CityCd;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictCdChanging(string value);
    partial void OnDistrictCdChanged();
    partial void OnDistrictNameChanging(string value);
    partial void OnDistrictNameChanged();
    partial void OnDistrictSearchNameChanging(string value);
    partial void OnDistrictSearchNameChanged();
    partial void OnCityCdChanging(string value);
    partial void OnCityCdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public District()
		{
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DistrictCd
		{
			get
			{
				return this._DistrictCd;
			}
			set
			{
				if ((this._DistrictCd != value))
				{
					this.OnDistrictCdChanging(value);
					this.SendPropertyChanging();
					this._DistrictCd = value;
					this.SendPropertyChanged("DistrictCd");
					this.OnDistrictCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="NVarChar(255)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this.OnDistrictNameChanging(value);
					this.SendPropertyChanging();
					this._DistrictName = value;
					this.SendPropertyChanged("DistrictName");
					this.OnDistrictNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictSearchName", DbType="VarChar(255)")]
		public string DistrictSearchName
		{
			get
			{
				return this._DistrictSearchName;
			}
			set
			{
				if ((this._DistrictSearchName != value))
				{
					this.OnDistrictSearchNameChanging(value);
					this.SendPropertyChanging();
					this._DistrictSearchName = value;
					this.SendPropertyChanged("DistrictSearchName");
					this.OnDistrictSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCd", DbType="VarChar(255)")]
		public string CityCd
		{
			get
			{
				return this._CityCd;
			}
			set
			{
				if ((this._CityCd != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityCdChanging(value);
					this.SendPropertyChanging();
					this._CityCd = value;
					this.SendPropertyChanged("CityCd");
					this.OnCityCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_District", Storage="_City", ThisKey="CityCd", OtherKey="CityCd", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._CityCd = value.CityCd;
					}
					else
					{
						this._CityCd = default(string);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAQs")]
	public partial class FAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FAQCd;
		
		private string _Question;
		
		private string _Answer;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFAQCdChanging(string value);
    partial void OnFAQCdChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public FAQ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FAQCd
		{
			get
			{
				return this._FAQCd;
			}
			set
			{
				if ((this._FAQCd != value))
				{
					this.OnFAQCdChanging(value);
					this.SendPropertyChanging();
					this._FAQCd = value;
					this.SendPropertyChanged("FAQCd");
					this.OnFAQCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(2000)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(MAX)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genders")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GenderCd;
		
		private string _GenderName;
		
		private string _GenderSearchName;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenderCdChanging(string value);
    partial void OnGenderCdChanged();
    partial void OnGenderNameChanging(string value);
    partial void OnGenderNameChanged();
    partial void OnGenderSearchNameChanging(string value);
    partial void OnGenderSearchNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Gender()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GenderCd
		{
			get
			{
				return this._GenderCd;
			}
			set
			{
				if ((this._GenderCd != value))
				{
					this.OnGenderCdChanging(value);
					this.SendPropertyChanging();
					this._GenderCd = value;
					this.SendPropertyChanged("GenderCd");
					this.OnGenderCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderName", DbType="NVarChar(255)")]
		public string GenderName
		{
			get
			{
				return this._GenderName;
			}
			set
			{
				if ((this._GenderName != value))
				{
					this.OnGenderNameChanging(value);
					this.SendPropertyChanging();
					this._GenderName = value;
					this.SendPropertyChanged("GenderName");
					this.OnGenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderSearchName", DbType="VarChar(255)")]
		public string GenderSearchName
		{
			get
			{
				return this._GenderSearchName;
			}
			set
			{
				if ((this._GenderSearchName != value))
				{
					this.OnGenderSearchNameChanging(value);
					this.SendPropertyChanging();
					this._GenderSearchName = value;
					this.SendPropertyChanged("GenderSearchName");
					this.OnGenderSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Item", Storage="_Items", ThisKey="GenderCd", OtherKey="GenderCd")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Gender = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Gender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftCard")]
	public partial class GiftCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GiftCd;
		
		private string _GiftStatus;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGiftCdChanging(string value);
    partial void OnGiftCdChanged();
    partial void OnGiftStatusChanging(string value);
    partial void OnGiftStatusChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public GiftCard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GiftCd
		{
			get
			{
				return this._GiftCd;
			}
			set
			{
				if ((this._GiftCd != value))
				{
					this.OnGiftCdChanging(value);
					this.SendPropertyChanging();
					this._GiftCd = value;
					this.SendPropertyChanged("GiftCd");
					this.OnGiftCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftStatus", DbType="VarChar(255)")]
		public string GiftStatus
		{
			get
			{
				return this._GiftStatus;
			}
			set
			{
				if ((this._GiftStatus != value))
				{
					this.OnGiftStatusChanging(value);
					this.SendPropertyChanging();
					this._GiftStatus = value;
					this.SendPropertyChanged("GiftStatus");
					this.OnGiftStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupRoles")]
	public partial class GroupRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GroupCd;
		
		private string _RoleCd;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupCdChanging(string value);
    partial void OnGroupCdChanged();
    partial void OnRoleCdChanging(string value);
    partial void OnRoleCdChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public GroupRole()
		{
			this._Group = default(EntityRef<Group>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GroupCd
		{
			get
			{
				return this._GroupCd;
			}
			set
			{
				if ((this._GroupCd != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupCdChanging(value);
					this.SendPropertyChanging();
					this._GroupCd = value;
					this.SendPropertyChanged("GroupCd");
					this.OnGroupCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleCd
		{
			get
			{
				return this._RoleCd;
			}
			set
			{
				if ((this._RoleCd != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleCdChanging(value);
					this.SendPropertyChanging();
					this._RoleCd = value;
					this.SendPropertyChanged("RoleCd");
					this.OnRoleCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupRole", Storage="_Group", ThisKey="GroupCd", OtherKey="GroupCd", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupRoles.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupRoles.Add(this);
						this._GroupCd = value.GroupCd;
					}
					else
					{
						this._GroupCd = default(string);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_GroupRole", Storage="_Role", ThisKey="RoleCd", OtherKey="RoleCd", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.GroupRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.GroupRoles.Add(this);
						this._RoleCd = value.RoleCd;
					}
					else
					{
						this._RoleCd = default(string);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GroupCd;
		
		private string _GroupName;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<GroupRole> _GroupRoles;
		
		private EntitySet<UserGroup> _UserGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupCdChanging(string value);
    partial void OnGroupCdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Group()
		{
			this._GroupRoles = new EntitySet<GroupRole>(new Action<GroupRole>(this.attach_GroupRoles), new Action<GroupRole>(this.detach_GroupRoles));
			this._UserGroups = new EntitySet<UserGroup>(new Action<UserGroup>(this.attach_UserGroups), new Action<UserGroup>(this.detach_UserGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GroupCd
		{
			get
			{
				return this._GroupCd;
			}
			set
			{
				if ((this._GroupCd != value))
				{
					this.OnGroupCdChanging(value);
					this.SendPropertyChanging();
					this._GroupCd = value;
					this.SendPropertyChanged("GroupCd");
					this.OnGroupCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(255)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupRole", Storage="_GroupRoles", ThisKey="GroupCd", OtherKey="GroupCd")]
		public EntitySet<GroupRole> GroupRoles
		{
			get
			{
				return this._GroupRoles;
			}
			set
			{
				this._GroupRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UserGroup", Storage="_UserGroups", ThisKey="GroupCd", OtherKey="GroupCd")]
		public EntitySet<UserGroup> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupRoles(GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupRoles(GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Helps")]
	public partial class Help : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HelpCd;
		
		private string _Title;
		
		private string _Contents;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHelpCdChanging(string value);
    partial void OnHelpCdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Help()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HelpCd
		{
			get
			{
				return this._HelpCd;
			}
			set
			{
				if ((this._HelpCd != value))
				{
					this.OnHelpCdChanging(value);
					this.SendPropertyChanging();
					this._HelpCd = value;
					this.SendPropertyChanged("HelpCd");
					this.OnHelpCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ItemCd;
		
		private string _ItemName;
		
		private string _ItemSearchName;
		
		private string _CategoryCd;
		
		private string _AgeCd;
		
		private string _GenderCd;
		
		private string _BrandCd;
		
		private string _CountryCd;
		
		private string _UnitCd;
		
		private string _ItemDiv;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _BuyingPrice;
		
		private System.Nullable<decimal> _Viewer;
		
		private string _FileId;
		
		private string _LinkVideo;
		
		private string _Material;
		
		private string _SummaryNotes;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<OfferItem> _OfferItems;
		
		private EntitySet<Offer> _Offers;
		
		private EntityRef<Age> _Age;
		
		private EntityRef<Brand> _Brand;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Gender> _Gender;
		
		private EntityRef<Unit> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemCdChanging(string value);
    partial void OnItemCdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemSearchNameChanging(string value);
    partial void OnItemSearchNameChanged();
    partial void OnCategoryCdChanging(string value);
    partial void OnCategoryCdChanged();
    partial void OnAgeCdChanging(string value);
    partial void OnAgeCdChanged();
    partial void OnGenderCdChanging(string value);
    partial void OnGenderCdChanged();
    partial void OnBrandCdChanging(string value);
    partial void OnBrandCdChanged();
    partial void OnCountryCdChanging(string value);
    partial void OnCountryCdChanged();
    partial void OnUnitCdChanging(string value);
    partial void OnUnitCdChanged();
    partial void OnItemDivChanging(string value);
    partial void OnItemDivChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnBuyingPriceChanging(System.Nullable<decimal> value);
    partial void OnBuyingPriceChanged();
    partial void OnViewerChanging(System.Nullable<decimal> value);
    partial void OnViewerChanged();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnLinkVideoChanging(string value);
    partial void OnLinkVideoChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnSummaryNotesChanging(string value);
    partial void OnSummaryNotesChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Item()
		{
			this._OfferItems = new EntitySet<OfferItem>(new Action<OfferItem>(this.attach_OfferItems), new Action<OfferItem>(this.detach_OfferItems));
			this._Offers = new EntitySet<Offer>(new Action<Offer>(this.attach_Offers), new Action<Offer>(this.detach_Offers));
			this._Age = default(EntityRef<Age>);
			this._Brand = default(EntityRef<Brand>);
			this._Category = default(EntityRef<Category>);
			this._Country = default(EntityRef<Country>);
			this._Gender = default(EntityRef<Gender>);
			this._Unit = default(EntityRef<Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemCd
		{
			get
			{
				return this._ItemCd;
			}
			set
			{
				if ((this._ItemCd != value))
				{
					this.OnItemCdChanging(value);
					this.SendPropertyChanging();
					this._ItemCd = value;
					this.SendPropertyChanged("ItemCd");
					this.OnItemCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(255)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSearchName", DbType="VarChar(255)")]
		public string ItemSearchName
		{
			get
			{
				return this._ItemSearchName;
			}
			set
			{
				if ((this._ItemSearchName != value))
				{
					this.OnItemSearchNameChanging(value);
					this.SendPropertyChanging();
					this._ItemSearchName = value;
					this.SendPropertyChanged("ItemSearchName");
					this.OnItemSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCd", DbType="VarChar(255)")]
		public string CategoryCd
		{
			get
			{
				return this._CategoryCd;
			}
			set
			{
				if ((this._CategoryCd != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryCdChanging(value);
					this.SendPropertyChanging();
					this._CategoryCd = value;
					this.SendPropertyChanged("CategoryCd");
					this.OnCategoryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeCd", DbType="VarChar(255)")]
		public string AgeCd
		{
			get
			{
				return this._AgeCd;
			}
			set
			{
				if ((this._AgeCd != value))
				{
					if (this._Age.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgeCdChanging(value);
					this.SendPropertyChanging();
					this._AgeCd = value;
					this.SendPropertyChanged("AgeCd");
					this.OnAgeCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderCd", DbType="VarChar(255)")]
		public string GenderCd
		{
			get
			{
				return this._GenderCd;
			}
			set
			{
				if ((this._GenderCd != value))
				{
					if (this._Gender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderCdChanging(value);
					this.SendPropertyChanging();
					this._GenderCd = value;
					this.SendPropertyChanged("GenderCd");
					this.OnGenderCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandCd", DbType="VarChar(255)")]
		public string BrandCd
		{
			get
			{
				return this._BrandCd;
			}
			set
			{
				if ((this._BrandCd != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandCdChanging(value);
					this.SendPropertyChanging();
					this._BrandCd = value;
					this.SendPropertyChanged("BrandCd");
					this.OnBrandCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCd", DbType="VarChar(255)")]
		public string CountryCd
		{
			get
			{
				return this._CountryCd;
			}
			set
			{
				if ((this._CountryCd != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryCdChanging(value);
					this.SendPropertyChanging();
					this._CountryCd = value;
					this.SendPropertyChanged("CountryCd");
					this.OnCountryCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCd", DbType="VarChar(255)")]
		public string UnitCd
		{
			get
			{
				return this._UnitCd;
			}
			set
			{
				if ((this._UnitCd != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitCdChanging(value);
					this.SendPropertyChanging();
					this._UnitCd = value;
					this.SendPropertyChanged("UnitCd");
					this.OnUnitCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDiv", DbType="VarChar(255)")]
		public string ItemDiv
		{
			get
			{
				return this._ItemDiv;
			}
			set
			{
				if ((this._ItemDiv != value))
				{
					this.OnItemDivChanging(value);
					this.SendPropertyChanging();
					this._ItemDiv = value;
					this.SendPropertyChanged("ItemDiv");
					this.OnItemDivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyingPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> BuyingPrice
		{
			get
			{
				return this._BuyingPrice;
			}
			set
			{
				if ((this._BuyingPrice != value))
				{
					this.OnBuyingPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyingPrice = value;
					this.SendPropertyChanged("BuyingPrice");
					this.OnBuyingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viewer", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Viewer
		{
			get
			{
				return this._Viewer;
			}
			set
			{
				if ((this._Viewer != value))
				{
					this.OnViewerChanging(value);
					this.SendPropertyChanging();
					this._Viewer = value;
					this.SendPropertyChanged("Viewer");
					this.OnViewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="VarChar(255)")]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkVideo", DbType="VarChar(255)")]
		public string LinkVideo
		{
			get
			{
				return this._LinkVideo;
			}
			set
			{
				if ((this._LinkVideo != value))
				{
					this.OnLinkVideoChanging(value);
					this.SendPropertyChanging();
					this._LinkVideo = value;
					this.SendPropertyChanged("LinkVideo");
					this.OnLinkVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(255)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryNotes", DbType="NVarChar(4000)")]
		public string SummaryNotes
		{
			get
			{
				return this._SummaryNotes;
			}
			set
			{
				if ((this._SummaryNotes != value))
				{
					this.OnSummaryNotesChanging(value);
					this.SendPropertyChanging();
					this._SummaryNotes = value;
					this.SendPropertyChanged("SummaryNotes");
					this.OnSummaryNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_OfferItem", Storage="_OfferItems", ThisKey="ItemCd", OtherKey="OfferItemCd")]
		public EntitySet<OfferItem> OfferItems
		{
			get
			{
				return this._OfferItems;
			}
			set
			{
				this._OfferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Offer", Storage="_Offers", ThisKey="ItemCd", OtherKey="ItemCd")]
		public EntitySet<Offer> Offers
		{
			get
			{
				return this._Offers;
			}
			set
			{
				this._Offers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Age_Item", Storage="_Age", ThisKey="AgeCd", OtherKey="AgeCd", IsForeignKey=true)]
		public Age Age
		{
			get
			{
				return this._Age.Entity;
			}
			set
			{
				Age previousValue = this._Age.Entity;
				if (((previousValue != value) 
							|| (this._Age.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Age.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Age.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._AgeCd = value.AgeCd;
					}
					else
					{
						this._AgeCd = default(string);
					}
					this.SendPropertyChanged("Age");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Item", Storage="_Brand", ThisKey="BrandCd", OtherKey="BrandCd", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._BrandCd = value.BrandCd;
					}
					else
					{
						this._BrandCd = default(string);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Item", Storage="_Category", ThisKey="CategoryCd", OtherKey="CategoryCd", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._CategoryCd = value.CategoryCd;
					}
					else
					{
						this._CategoryCd = default(string);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Item", Storage="_Country", ThisKey="CountryCd", OtherKey="CountryCd", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._CountryCd = value.CountryCd;
					}
					else
					{
						this._CountryCd = default(string);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Item", Storage="_Gender", ThisKey="GenderCd", OtherKey="GenderCd", IsForeignKey=true)]
		public Gender Gender
		{
			get
			{
				return this._Gender.Entity;
			}
			set
			{
				Gender previousValue = this._Gender.Entity;
				if (((previousValue != value) 
							|| (this._Gender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Gender.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._GenderCd = value.GenderCd;
					}
					else
					{
						this._GenderCd = default(string);
					}
					this.SendPropertyChanged("Gender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Item", Storage="_Unit", ThisKey="UnitCd", OtherKey="UnitCd", IsForeignKey=true)]
		public Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._UnitCd = value.UnitCd;
					}
					else
					{
						this._UnitCd = default(string);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OfferItems(OfferItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_OfferItems(OfferItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MCodes")]
	public partial class MCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeGroupCd;
		
		private string _CodeCd;
		
		private string _CodeName;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeGroupCdChanging(string value);
    partial void OnCodeGroupCdChanged();
    partial void OnCodeCdChanging(string value);
    partial void OnCodeCdChanged();
    partial void OnCodeNameChanging(string value);
    partial void OnCodeNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public MCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeGroupCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeGroupCd
		{
			get
			{
				return this._CodeGroupCd;
			}
			set
			{
				if ((this._CodeGroupCd != value))
				{
					this.OnCodeGroupCdChanging(value);
					this.SendPropertyChanging();
					this._CodeGroupCd = value;
					this.SendPropertyChanged("CodeGroupCd");
					this.OnCodeGroupCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeCd
		{
			get
			{
				return this._CodeCd;
			}
			set
			{
				if ((this._CodeCd != value))
				{
					this.OnCodeCdChanging(value);
					this.SendPropertyChanging();
					this._CodeCd = value;
					this.SendPropertyChanged("CodeCd");
					this.OnCodeCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeName", DbType="NVarChar(255)")]
		public string CodeName
		{
			get
			{
				return this._CodeName;
			}
			set
			{
				if ((this._CodeName != value))
				{
					this.OnCodeNameChanging(value);
					this.SendPropertyChanging();
					this._CodeName = value;
					this.SendPropertyChanged("CodeName");
					this.OnCodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MNumbers")]
	public partial class MNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Year;
		
		private string _Month;
		
		private decimal _SlipNo;
		
		private System.Nullable<decimal> _Digits;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnSlipNoChanging(decimal value);
    partial void OnSlipNoChanged();
    partial void OnDigitsChanging(System.Nullable<decimal> value);
    partial void OnDigitsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public MNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal SlipNo
		{
			get
			{
				return this._SlipNo;
			}
			set
			{
				if ((this._SlipNo != value))
				{
					this.OnSlipNoChanging(value);
					this.SendPropertyChanging();
					this._SlipNo = value;
					this.SendPropertyChanged("SlipNo");
					this.OnSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digits", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Digits
		{
			get
			{
				return this._Digits;
			}
			set
			{
				if ((this._Digits != value))
				{
					this.OnDigitsChanging(value);
					this.SendPropertyChanging();
					this._Digits = value;
					this.SendPropertyChanged("Digits");
					this.OnDigitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MParameters")]
	public partial class MParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ParamCd;
		
		private string _ParamName;
		
		private string _ParamValue;
		
		private string _ParamType;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParamCdChanging(string value);
    partial void OnParamCdChanged();
    partial void OnParamNameChanging(string value);
    partial void OnParamNameChanged();
    partial void OnParamValueChanging(string value);
    partial void OnParamValueChanged();
    partial void OnParamTypeChanging(string value);
    partial void OnParamTypeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public MParameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ParamCd
		{
			get
			{
				return this._ParamCd;
			}
			set
			{
				if ((this._ParamCd != value))
				{
					this.OnParamCdChanging(value);
					this.SendPropertyChanging();
					this._ParamCd = value;
					this.SendPropertyChanged("ParamCd");
					this.OnParamCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamName", DbType="NVarChar(255)")]
		public string ParamName
		{
			get
			{
				return this._ParamName;
			}
			set
			{
				if ((this._ParamName != value))
				{
					this.OnParamNameChanging(value);
					this.SendPropertyChanging();
					this._ParamName = value;
					this.SendPropertyChanged("ParamName");
					this.OnParamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamValue", DbType="NVarChar(255)")]
		public string ParamValue
		{
			get
			{
				return this._ParamValue;
			}
			set
			{
				if ((this._ParamValue != value))
				{
					this.OnParamValueChanging(value);
					this.SendPropertyChanging();
					this._ParamValue = value;
					this.SendPropertyChanged("ParamValue");
					this.OnParamValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamType", DbType="VarChar(255)")]
		public string ParamType
		{
			get
			{
				return this._ParamType;
			}
			set
			{
				if ((this._ParamType != value))
				{
					this.OnParamTypeChanging(value);
					this.SendPropertyChanging();
					this._ParamType = value;
					this.SendPropertyChanged("ParamType");
					this.OnParamTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newsletter")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Email;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Newsletter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferItems")]
	public partial class OfferItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OfferCd;
		
		private decimal _DetailNo;
		
		private string _OfferItemCd;
		
		private System.Nullable<decimal> _OfferItemQtty;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferCdChanging(string value);
    partial void OnOfferCdChanged();
    partial void OnDetailNoChanging(decimal value);
    partial void OnDetailNoChanged();
    partial void OnOfferItemCdChanging(string value);
    partial void OnOfferItemCdChanged();
    partial void OnOfferItemQttyChanging(System.Nullable<decimal> value);
    partial void OnOfferItemQttyChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public OfferItem()
		{
			this._Item = default(EntityRef<Item>);
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OfferCd
		{
			get
			{
				return this._OfferCd;
			}
			set
			{
				if ((this._OfferCd != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferCdChanging(value);
					this.SendPropertyChanging();
					this._OfferCd = value;
					this.SendPropertyChanged("OfferCd");
					this.OnOfferCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal DetailNo
		{
			get
			{
				return this._DetailNo;
			}
			set
			{
				if ((this._DetailNo != value))
				{
					this.OnDetailNoChanging(value);
					this.SendPropertyChanging();
					this._DetailNo = value;
					this.SendPropertyChanged("DetailNo");
					this.OnDetailNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferItemCd", DbType="VarChar(255)")]
		public string OfferItemCd
		{
			get
			{
				return this._OfferItemCd;
			}
			set
			{
				if ((this._OfferItemCd != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferItemCdChanging(value);
					this.SendPropertyChanging();
					this._OfferItemCd = value;
					this.SendPropertyChanged("OfferItemCd");
					this.OnOfferItemCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferItemQtty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> OfferItemQtty
		{
			get
			{
				return this._OfferItemQtty;
			}
			set
			{
				if ((this._OfferItemQtty != value))
				{
					this.OnOfferItemQttyChanging(value);
					this.SendPropertyChanging();
					this._OfferItemQtty = value;
					this.SendPropertyChanged("OfferItemQtty");
					this.OnOfferItemQttyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_OfferItem", Storage="_Item", ThisKey="OfferItemCd", OtherKey="ItemCd", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.OfferItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.OfferItems.Add(this);
						this._OfferItemCd = value.ItemCd;
					}
					else
					{
						this._OfferItemCd = default(string);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferItem", Storage="_Offer", ThisKey="OfferCd", OtherKey="OfferCd", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.OfferItems.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.OfferItems.Add(this);
						this._OfferCd = value.OfferCd;
					}
					else
					{
						this._OfferCd = default(string);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offers")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OfferCd;
		
		private string _ItemCd;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _OfferDiv;
		
		private System.Nullable<decimal> _Percent;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<OfferItem> _OfferItems;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferCdChanging(string value);
    partial void OnOfferCdChanged();
    partial void OnItemCdChanging(string value);
    partial void OnItemCdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnOfferDivChanging(string value);
    partial void OnOfferDivChanged();
    partial void OnPercentChanging(System.Nullable<decimal> value);
    partial void OnPercentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Offer()
		{
			this._OfferItems = new EntitySet<OfferItem>(new Action<OfferItem>(this.attach_OfferItems), new Action<OfferItem>(this.detach_OfferItems));
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OfferCd
		{
			get
			{
				return this._OfferCd;
			}
			set
			{
				if ((this._OfferCd != value))
				{
					this.OnOfferCdChanging(value);
					this.SendPropertyChanging();
					this._OfferCd = value;
					this.SendPropertyChanged("OfferCd");
					this.OnOfferCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCd", DbType="VarChar(255)")]
		public string ItemCd
		{
			get
			{
				return this._ItemCd;
			}
			set
			{
				if ((this._ItemCd != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCdChanging(value);
					this.SendPropertyChanging();
					this._ItemCd = value;
					this.SendPropertyChanged("ItemCd");
					this.OnItemCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferDiv", DbType="VarChar(255)")]
		public string OfferDiv
		{
			get
			{
				return this._OfferDiv;
			}
			set
			{
				if ((this._OfferDiv != value))
				{
					this.OnOfferDivChanging(value);
					this.SendPropertyChanging();
					this._OfferDiv = value;
					this.SendPropertyChanged("OfferDiv");
					this.OnOfferDivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percent]", Storage="_Percent", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Percent
		{
			get
			{
				return this._Percent;
			}
			set
			{
				if ((this._Percent != value))
				{
					this.OnPercentChanging(value);
					this.SendPropertyChanging();
					this._Percent = value;
					this.SendPropertyChanged("Percent");
					this.OnPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferItem", Storage="_OfferItems", ThisKey="OfferCd", OtherKey="OfferCd")]
		public EntitySet<OfferItem> OfferItems
		{
			get
			{
				return this._OfferItems;
			}
			set
			{
				this._OfferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Offer", Storage="_Item", ThisKey="ItemCd", OtherKey="ItemCd", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Offers.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Offers.Add(this);
						this._ItemCd = value.ItemCd;
					}
					else
					{
						this._ItemCd = default(string);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OfferItems(OfferItem entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_OfferItems(OfferItem entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prices")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PriceCd;
		
		private string _PriceName;
		
		private string _PriceDiv;
		
		private System.Nullable<decimal> _PriceStart;
		
		private System.Nullable<decimal> _PriceEnd;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceCdChanging(string value);
    partial void OnPriceCdChanged();
    partial void OnPriceNameChanging(string value);
    partial void OnPriceNameChanged();
    partial void OnPriceDivChanging(string value);
    partial void OnPriceDivChanged();
    partial void OnPriceStartChanging(System.Nullable<decimal> value);
    partial void OnPriceStartChanged();
    partial void OnPriceEndChanging(System.Nullable<decimal> value);
    partial void OnPriceEndChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Price()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PriceCd
		{
			get
			{
				return this._PriceCd;
			}
			set
			{
				if ((this._PriceCd != value))
				{
					this.OnPriceCdChanging(value);
					this.SendPropertyChanging();
					this._PriceCd = value;
					this.SendPropertyChanged("PriceCd");
					this.OnPriceCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceName", DbType="NVarChar(255)")]
		public string PriceName
		{
			get
			{
				return this._PriceName;
			}
			set
			{
				if ((this._PriceName != value))
				{
					this.OnPriceNameChanging(value);
					this.SendPropertyChanging();
					this._PriceName = value;
					this.SendPropertyChanged("PriceName");
					this.OnPriceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDiv", DbType="VarChar(255)")]
		public string PriceDiv
		{
			get
			{
				return this._PriceDiv;
			}
			set
			{
				if ((this._PriceDiv != value))
				{
					this.OnPriceDivChanging(value);
					this.SendPropertyChanging();
					this._PriceDiv = value;
					this.SendPropertyChanged("PriceDiv");
					this.OnPriceDivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceStart", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PriceStart
		{
			get
			{
				return this._PriceStart;
			}
			set
			{
				if ((this._PriceStart != value))
				{
					this.OnPriceStartChanging(value);
					this.SendPropertyChanging();
					this._PriceStart = value;
					this.SendPropertyChanged("PriceStart");
					this.OnPriceStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceEnd", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PriceEnd
		{
			get
			{
				return this._PriceEnd;
			}
			set
			{
				if ((this._PriceEnd != value))
				{
					this.OnPriceEndChanging(value);
					this.SendPropertyChanging();
					this._PriceEnd = value;
					this.SendPropertyChanged("PriceEnd");
					this.OnPriceEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleCd;
		
		private string _RoleName;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<GroupRole> _GroupRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleCdChanging(string value);
    partial void OnRoleCdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Role()
		{
			this._GroupRoles = new EntitySet<GroupRole>(new Action<GroupRole>(this.attach_GroupRoles), new Action<GroupRole>(this.detach_GroupRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleCd
		{
			get
			{
				return this._RoleCd;
			}
			set
			{
				if ((this._RoleCd != value))
				{
					this.OnRoleCdChanging(value);
					this.SendPropertyChanging();
					this._RoleCd = value;
					this.SendPropertyChanged("RoleCd");
					this.OnRoleCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(255)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_GroupRole", Storage="_GroupRoles", ThisKey="RoleCd", OtherKey="RoleCd")]
		public EntitySet<GroupRole> GroupRoles
		{
			get
			{
				return this._GroupRoles;
			}
			set
			{
				this._GroupRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupRoles(GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_GroupRoles(GroupRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stocks")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNo;
		
		private decimal _DetailNo;
		
		private string _ItemCd;
		
		private System.Nullable<decimal> _StockQtty;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNoChanging(string value);
    partial void OnSlipNoChanged();
    partial void OnDetailNoChanging(decimal value);
    partial void OnDetailNoChanged();
    partial void OnItemCdChanging(string value);
    partial void OnItemCdChanged();
    partial void OnStockQttyChanging(System.Nullable<decimal> value);
    partial void OnStockQttyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Stock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNo", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SlipNo
		{
			get
			{
				return this._SlipNo;
			}
			set
			{
				if ((this._SlipNo != value))
				{
					this.OnSlipNoChanging(value);
					this.SendPropertyChanging();
					this._SlipNo = value;
					this.SendPropertyChanged("SlipNo");
					this.OnSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal DetailNo
		{
			get
			{
				return this._DetailNo;
			}
			set
			{
				if ((this._DetailNo != value))
				{
					this.OnDetailNoChanging(value);
					this.SendPropertyChanging();
					this._DetailNo = value;
					this.SendPropertyChanged("DetailNo");
					this.OnDetailNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCd", DbType="VarChar(255)")]
		public string ItemCd
		{
			get
			{
				return this._ItemCd;
			}
			set
			{
				if ((this._ItemCd != value))
				{
					this.OnItemCdChanging(value);
					this.SendPropertyChanging();
					this._ItemCd = value;
					this.SendPropertyChanged("ItemCd");
					this.OnItemCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQtty", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> StockQtty
		{
			get
			{
				return this._StockQtty;
			}
			set
			{
				if ((this._StockQtty != value))
				{
					this.OnStockQttyChanging(value);
					this.SendPropertyChanging();
					this._StockQtty = value;
					this.SendPropertyChanged("StockQtty");
					this.OnStockQttyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StorageFiles")]
	public partial class StorageFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private decimal _FileNo;
		
		private string _FileName;
		
		private string _FileGroup;
		
		private System.Nullable<decimal> _SortKey;
		
		private System.Nullable<bool> _ActiveFlag;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileNoChanging(decimal value);
    partial void OnFileNoChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileGroupChanging(string value);
    partial void OnFileGroupChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnActiveFlagChanging(System.Nullable<bool> value);
    partial void OnActiveFlagChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public StorageFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal FileNo
		{
			get
			{
				return this._FileNo;
			}
			set
			{
				if ((this._FileNo != value))
				{
					this.OnFileNoChanging(value);
					this.SendPropertyChanging();
					this._FileNo = value;
					this.SendPropertyChanged("FileNo");
					this.OnFileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(255)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileGroup", DbType="VarChar(255)")]
		public string FileGroup
		{
			get
			{
				return this._FileGroup;
			}
			set
			{
				if ((this._FileGroup != value))
				{
					this.OnFileGroupChanging(value);
					this.SendPropertyChanging();
					this._FileGroup = value;
					this.SendPropertyChanged("FileGroup");
					this.OnFileGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit")]
		public System.Nullable<bool> ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SupplierCd;
		
		private string _SupplierName;
		
		private string _SupplierSearchName;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierCdChanging(string value);
    partial void OnSupplierCdChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierSearchNameChanging(string value);
    partial void OnSupplierSearchNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Supplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SupplierCd
		{
			get
			{
				return this._SupplierCd;
			}
			set
			{
				if ((this._SupplierCd != value))
				{
					this.OnSupplierCdChanging(value);
					this.SendPropertyChanging();
					this._SupplierCd = value;
					this.SendPropertyChanged("SupplierCd");
					this.OnSupplierCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(255)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierSearchName", DbType="VarChar(255)")]
		public string SupplierSearchName
		{
			get
			{
				return this._SupplierSearchName;
			}
			set
			{
				if ((this._SupplierSearchName != value))
				{
					this.OnSupplierSearchNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierSearchName = value;
					this.SendPropertyChanged("SupplierSearchName");
					this.OnSupplierSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Units")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitCd;
		
		private string _UnitName;
		
		private string _UnitSearchName;
		
		private string _Notes;
		
		private System.Nullable<decimal> _SortKey;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitCdChanging(string value);
    partial void OnUnitCdChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnUnitSearchNameChanging(string value);
    partial void OnUnitSearchNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSortKeyChanging(System.Nullable<decimal> value);
    partial void OnSortKeyChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Unit()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitCd
		{
			get
			{
				return this._UnitCd;
			}
			set
			{
				if ((this._UnitCd != value))
				{
					this.OnUnitCdChanging(value);
					this.SendPropertyChanging();
					this._UnitCd = value;
					this.SendPropertyChanged("UnitCd");
					this.OnUnitCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(255)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitSearchName", DbType="VarChar(255)")]
		public string UnitSearchName
		{
			get
			{
				return this._UnitSearchName;
			}
			set
			{
				if ((this._UnitSearchName != value))
				{
					this.OnUnitSearchNameChanging(value);
					this.SendPropertyChanging();
					this._UnitSearchName = value;
					this.SendPropertyChanged("UnitSearchName");
					this.OnUnitSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortKey", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SortKey
		{
			get
			{
				return this._SortKey;
			}
			set
			{
				if ((this._SortKey != value))
				{
					this.OnSortKeyChanging(value);
					this.SendPropertyChanging();
					this._SortKey = value;
					this.SendPropertyChanged("SortKey");
					this.OnSortKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Item", Storage="_Items", ThisKey="UnitCd", OtherKey="UnitCd")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroups")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserCd;
		
		private string _GroupCd;
		
		private string _CreateUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _UpdateUser;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCdChanging(System.Guid value);
    partial void OnUserCdChanged();
    partial void OnGroupCdChanging(string value);
    partial void OnGroupCdChanged();
    partial void OnCreateUserChanging(string value);
    partial void OnCreateUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public UserGroup()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCd", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserCd
		{
			get
			{
				return this._UserCd;
			}
			set
			{
				if ((this._UserCd != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCdChanging(value);
					this.SendPropertyChanging();
					this._UserCd = value;
					this.SendPropertyChanged("UserCd");
					this.OnUserCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCd", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GroupCd
		{
			get
			{
				return this._GroupCd;
			}
			set
			{
				if ((this._GroupCd != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupCdChanging(value);
					this.SendPropertyChanging();
					this._GroupCd = value;
					this.SendPropertyChanged("GroupCd");
					this.OnGroupCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="VarChar(255)")]
		public string CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(255)")]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UserGroup", Storage="_Group", ThisKey="GroupCd", OtherKey="GroupCd", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._GroupCd = value.GroupCd;
					}
					else
					{
						this._GroupCd = default(string);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGroup", Storage="_User", ThisKey="UserCd", OtherKey="UserCd", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._UserCd = value.UserCd;
					}
					else
					{
						this._UserCd = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
